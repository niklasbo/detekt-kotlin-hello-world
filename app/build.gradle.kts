/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    id("io.gitlab.arturbosch.detekt") version "1.23.3"
    id("org.jlleitschuh.gradle.ktlint") version "10.2.0"
    id("org.gradle.toolchains.foojay-resolver-convention") version "0.8.0"


    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    alias(libs.plugins.jvm)
    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

buildscript {
    repositories {
        gradlePluginPortal()
    }
    dependencies {
        classpath("io.gitlab.arturbosch.detekt:detekt-gradle-plugin:1.23.3")
    }
}

apply(plugin = "io.gitlab.arturbosch.detekt")

/*
buildscript {
    dependencies {
        classpath("org.jlleitschuh.gradle:ktlint-gradle:10.2.0")
    }
}
*/
dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation(libs.junit.jupiter)

    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    detektPlugins("io.gitlab.arturbosch.detekt:detekt-formatting:1.23.3") //NB: added to use ktlint, this `detektPlugins` function is marked as error, but it is working!
    //option 1, direct jar file reference(s):
    detektPlugins(files("C:\\Users\\Niklas\\Programmierung\\detekt-custom-rule-template\\build\\libs\\detekt-custom-rule-1.0-SNAPSHOT.jar")) //NB: change the path to the built jar of the rule project
    //option 2, subprojects / create a module and reference it here (not working!):
    //detektPlugins(project(":detekt-custom-rule-in-submodule"))
    // root-project/
    // ├── app/
    // │   └── build.gradle.kts
    // ├── custom-detekt-rules/
    // │   └── build.gradle.kts
    // └── settings.gradle.kts

    // This dependency is used by the application.
    implementation(libs.guava)
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(19) //NB: detekt allows only jvm <=20
    }
}
kotlin {
    jvmToolchain(19) // NB: set this to your local java version
}

application {
    // Define the main class for the application.
    mainClass = "org.example.AppKt"
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

detekt {
    toolVersion = "1.23.3"
    config.setFrom(file("config/detekt/detekt.yml"))
    buildUponDefaultConfig = true
}
tasks.withType<Detekt>().configureEach {
    reports {
        xml.required.set(true)
        html.required.set(true)
        txt.required.set(true)
        sarif.required.set(true)
        md.required.set(true)
    }
}

subprojects {
    apply(plugin = "io.gitlab.arturbosch.detekt")
}